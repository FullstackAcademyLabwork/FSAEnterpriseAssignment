
name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2.5.0

      - name: workflowValidation
        run: echo Hold on..,. just... getting ready here.,,,. 

      # Installing Python to properly read the ported .NET code
      - name: pySetup
        uses: actions/setup-python@v2.3.3
        with:
          python-version: 3.8
          architecture: x64
  
      # Setting up a virtual environment to host security checks and linter
      - name: VirtEnvSetup
        uses: syphar/restore-virtualenv@v1
        id: cache-virtualenv
        with:
          requirement_files: requirements.txt
          
      - uses: syphar/restore-pip-download-cache@v1
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        
      - run: pip install -r requirements.txt
        if: steps.cache-virtualenv.outputs.cache-hit != 'true'
        
      # checking security with Bandit
      - name: banditCheck
        uses: shundor/python-bandit-scan@v1.0
      
      # zipping up for sending to AWS
      - name: zipUp
        run: |
          cd /home/runner/.virtualenvs/.venv
          sudo zip -r9 ../../../../lambdaFile.zip .
          
      # Add app into zip file
      - name: addAppToZipFile
        run: cd ./projectApp && zip -g ../enterpriseLambda.zip -r .
        
      # Upload into AWS as an artifact
      - name: zipUpload
        uses: actions/upload-artifact@v3.1.1
        with:
          name: enterpriseLambda
          path: enterpriseLambda.zip

  continuous-deployment:
      runs-on: ubuntu-latest
      needs: [continuous-integration]
      if: github.ref == 'refs/heads/main'
      steps:
          
        - name: awsCLIinstall
          uses: isbang/setup-awscli@v0.1.0
      
      # Download previous artifact
        - name: artifactDownload
          uses: actions/download-artifact@v3.0.1
          with:
            name: enterpriseLambda
      
      # Upload s3 file to lambda
        - name: lambdaUpload
          uses: koraykoska/s3-upload-github-action@0.1.3
          env:
            FILE: enterpriseLambda.zip
            S3_ENDPOINT: 'http://enterprise-assignment-bukkit.s3-website-us-east-1.amazonaws.com/'
            S3_BUCKET: ${{ secrets.S3_BUCKET }}
            S3_ACCESS_KEY_ID: ${{ secrets.S3_ACCES_KEY_ID }}
            S3_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
      
      # Deploy new Lambda zip to s3 bucket
        - name: lambdaDeploy
          run: aws lambda update-function-code --function-name assignment-lambda --s3-bucket -enterprise-assignment-bukkit --s3-key -enterpriseLambda.zip
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
